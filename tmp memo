{
  "presets": ["@babel/preset-env", "@babel/preset-react"]
}


            position: 'fixed',
            overflowY: 'scroll',
            zIndex: '99',
            top: '0',
            width: '100%',
            height: '100%',
            backgroundColor: '#f00',
            WebkitOverflowScrolling: 'touch',

style={{ height: '500px', withImportant: true }}



import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Route, Switch, withRouter } from 'react-router-dom';
import { PageContext } from './';
import NavigationBar from './components/NavigationBar';
import BottomNavigation from './components/BottomNavigation';
import Home from './pages/Home/Container';
import Report from './pages/Report/Container';
import Search from './pages/Search/Container';
import MyPage from './pages/MyPage/Container';
import Registration from './pages/Registration/Container';
import Setting from './subpages/Setting/Container';

class App extends Component {
  constructor() {
    super();
    this.state = {
      title: '',
    };
  }

  setNavigationTitle(title) {
    this.setState({ title });
  }

  UNSAFE_componentWillMount() {
    switch (this.props.location.pathname) {
      case '/':
        this.setNavigationTitle('ホーム');
        break;
      case '/report/':
        this.setNavigationTitle('報告選択');
        break;
      case '/search/':
        this.setNavigationTitle('検索');
        break;
      case '/mypage/':
        this.setNavigationTitle('マイページ');
        break;
    }
  }

  render() {
    return (
      <PageContext.Provider
        value={{
          state: { title: this.state.title },
          actions: {
            setNavigationTitle: title => this.setNavigationTitle(title),
          },
        }}
      >
        <div
          style={{
            display: 'flex',
            flexDirection: 'column',
            minHeight: '100vh',
            backgroundColor: 'lightGray',
          }}
        >
          <NavigationBar title={this.state.title} />

          <Switch>
            <Route exact path="/" component={Home} />
            <Route path="/report/" component={Report} />
            <Route path="/search/" component={Search} />
            <Route path="/mypage/" component={MyPage} />
            <Route path="/Registration/" component={Registration} />
            <Route path="/Setting/:id" component={Setting} />
          </Switch>

          <div style={{ marginTop: 'auto' }}>
            <BottomNavigation />
          </div>
        </div>
      </PageContext.Provider>
    );
  }
}

App.propTypes = {
  location: PropTypes.object,
  props: PropTypes.array,
};

export default withRouter(props => <App {...props} />);




    "start": "webpack-dev-server --open --mode development --env.NODE_ENV=development",
    "build": "webpack --mode production --env.NODE_ENV=development",
